const {init} = require('../../managers');
const {__} = require('../../modules/Messages');
const moment = require('moment');

let finance = init('finance');
let profileManager = init('profile');

function toggleFavorite(item, ctx) {
    return finance.toggleInFavourites(ctx.session.profile, item, profileManager);
}

async function getAction(ctx) {
    let currentIndex = ctx.session.index || 0;
    let {item} = await getItemAtIndex(currentIndex, ctx);
    let like = await finance.getLike(ctx.session.profile, item);

    let hasLike = Boolean(like);

    return {button: (hasLike
            ? {code: '_skip', text: '‚ûñ'}
            : {code: 'action', text: 'üëç'}),
        route: async (item, ctx) => {
            await finance.saveLike(ctx.session.profile, item);
            return ctx.scene.reenter();
        }};
}

async function saveSettings(profile, ctx) {
    ctx.session.profile = await profileManager.saveProfile(profile);
}

function getSelectedCategoryIds(ctx) {
    return ctx.session.profile.category || [];
}

function getAllCategories() {
    return finance.listCategoriesHierarcy();
}

async function getItemAtIndex(currentIndex, ctx) {
    let searchType = ctx.scene.state.type || false;
    let lastVisit = ctx.scene.state.lastVisit || false;
    let categoryIds = getSelectedCategoryIds(ctx);
    let categories = await finance.listCategoriesByIds(categoryIds);
    let categoryTitles = categories.map(category => category.title);

    let favorite = ctx.session.profile.favorite || [];
    let profile = ctx.session.profile || {};

    return finance.discoverAtIndex(categoryTitles, favorite, currentIndex, searchType, profile, lastVisit);
}

function getEmptyText() {
    return `–ü–æ—Ö–æ–∂–µ —Ç—É—Ç –ø–æ–∫–∞ —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç. 

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –¥—Ä—É–≥–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞.`;
}

function getSettingsText() {
    return `–í—ã–±–µ—Ä–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞.

–ï—Å–ª–∏ –≤—ã —Å—Ç–∞–≤–∏—Ç–µ –¥–≤–µ –∏ –±–æ–ª–µ–µ - –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ –∫–∞–∂–¥–æ–π –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–∏ —Å—Ç–∞—Ç–µ–π.`;
}

function getItemDescription(item) {
    return __(`<b>${item.title}</b>

${item.description || ''}
    
<a href="${item.link}">–ß–∏—Ç–∞—Ç—å –¥–∞–ª—å—à–µ...</a>`, ['content', 'article', 'finance']);
}

function getItemImage(item) {
    return item.image ? item.image.replace('http:', 'https:') : false;
}

function getLastVisit(ctx) {
    return ctx && ctx.session && ctx.session.profile
        ? ctx.session.profile.lastVisit
        : false;
}

async function setLastVisit(ctx) {
    let profile = ctx.session.profile;
    profile.lastVisit = moment().unix();
    return saveSettings(profile, ctx);
}

module.exports = {
    disclaimer: {text: `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!

–Ø –∫–∞–∫ –º–∏–Ω–∏–º—É–º –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–ª–∞–¥–∏—Ç—å –¥–µ–ª–∞ —Å —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏, –±–∏–∑–Ω–µ—Å–æ–º –∏ –ª–∏—á–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é. –ê –¥–∞–ª—å—à–µ - –∫–∞–∫ –ø–æ–π–¥–µ—Ç, —ç—Ç–∏–º –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–º—Å—è

–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –º–Ω–æ—é –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è - –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –≤ –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö –ø–æ —Ç–µ–º–∞–º —Ä–∞—Å—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —Å—Ç–∞—Ç—å–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–µ–º.

–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!`, tags: ['content', 'intro']},
    toggleFavorite,
    getAction,
    saveSettings,
    getSelectedCategoryIds,
    getAllCategories,
    getItemAtIndex,
    getEmptyText,
    getSettingsText,
    getItemDescription,
    getItemImage,
    getLastVisit,
    setLastVisit
}