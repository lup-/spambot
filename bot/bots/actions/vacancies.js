const {init} = require('../../managers');
const {escapeHTML} = require('../helpers/common');
const {menu} = require('../helpers/wizard');
const {__} = require('../../modules/Messages');
const moment = require('moment');

let vacancies = init('vacancies');
let periodic = init('periodic');
let profileManager = init('profile');

const hhFilter = process.env.HH_FILTER
    ? JSON.parse(process.env.HH_FILTER)
    : {};

async function showVacancy(item, ctx) {
    let fullVacancy = item;

    if (item.showType == 'hh') {
        let parsed = await vacancies.parseVacancy(item.alternate_url);
        fullVacancy = await vacancies.getVacancy(item.id);
        fullVacancy.contact = parsed.contactInfo;
    }

    let hasResume = false;
    let userId = ctx.session.userId || false;
    if (userId) {
        hasResume = await vacancies.hasResume(userId);
    }

    let resumeButton = hasResume
        ? {code: 'send_resume', text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—é–º–µ'}
        : {code: 'new_resume', text: '–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑—é–º–µ'}

    let extra = menu([{code: 'continue', text: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∏—Å–∫'}, resumeButton]);
    extra.disable_web_page_preview = true;

    return ctx.replyWithHTML( getFullItemDescription(fullVacancy), extra );
}

async function getAction() {
    return {
        button: {code: 'action', text: 'üëÄ'},
        route: showVacancy
    };
}
async function saveSettings(profile, ctx) {
    ctx.session.profile = await profileManager.saveProfile(profile);
}
function getSelectedCategoryIds(ctx) {
    return vacancies.getSelectedCategoryIds(ctx);
}
function getAllCategories() {
    return vacancies.getCatalogCategories();
}
async function getItemAtIndex(currentIndex, ctx) {
    return vacancies.discoverAtIndex(ctx, currentIndex, hhFilter);
}

function getEmptyText() {
    return `–ü–æ—Ö–æ–∂–µ —Ç—É—Ç –ø–æ–∫–∞ —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç. 

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –¥—Ä—É–≥–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞.`;
}
function getSettingsText() {
    return `–ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –ø–æ–∏—Å–∫ –±–æ–ª–µ–µ —Ç–æ—á–µ—á–Ω—ã–º –∏ —É—Å–∫–æ—Ä–∏—Ç—å –µ–≥–æ, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.

–í–∞–∫–∞–Ω—Å–∏–∏ –≤ –±–æ—Ç–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è. –û–Ω —Å–æ–±–∏—Ä–∞–µ—Ç –∏—Ö —Å—Ä–∞–∑—É –≤ –º–æ–º–µ–Ω—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–∞—Ö. –ó–∞ —Å—á—ë—Ç —ç—Ç–æ–≥–æ —à–∞–Ω—Å –æ—Ç–∫–ª–∏–∫–∞ –Ω–∞ –≤–∞—à–µ —Ä–µ–∑—é–º–µ –≤ –¥–µ—Å—è—Ç–∫–∏ —Ä–∞–∑ –≤—ã—à–µ, —á–µ–º –æ–±—ã—á–Ω–æ`;
}

function getContacts(item) {
    if (!item.contact) {
        return `<a href="${item.apply_alternate_url}">–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∫–ª–∏–∫ –Ω–∞ —Å–∞–π—Ç–µ</a>`;
    }

    let phones = item.contact && item.contact.phones && item.contact.phones.phones
        ? item.contact.phones.phones.map(({country, city, number}) => `+${country} (${city}) ${number}`)
        : [];

    let contacts = [];
    if (item.contact.fio) {
        contacts.push(item.contact.fio);
    }

    if (item.contact.email) {
        contacts.push(item.contact.email);
    }

    if (phones && phones.length > 0) {
        contacts = contacts.concat(phones);
    }

    return contacts.length > 0 ? contacts.join('\n') : `<a href="${item.apply_alternate_url}">–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∫–ª–∏–∫ –Ω–∞ —Å–∞–π—Ç–µ</a>`;
}
function getSalary(item) {
    if (!item.salary) {
        return '–Ω–µ —É–∫–∞–∑–∞–Ω–∞';
    }

    let parts = [];
    if (item.salary.from) {
        parts.push(item.salary.from);
    }

    if (item.salary.to) {
        parts.push(item.salary.to);
    }

    return parts.join('-') + ' ' + item.salary.currency;
}
function getLocalFullItemDescription(item) {
    return __(`<b>${item.name}</b>
${item.city || ''}

<b>–û–ø–ª–∞—Ç–∞:</b>
${getSalary(item)}

<b>–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏:</b>
${item.responsibilities || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}

<b>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</b>
${item.requirements || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}

<b>–£—Å–ª–æ–≤–∏—è:</b>
${item.conditions || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}

<b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>
${item.contacts || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}`, ['content', 'vacancy', 'job']);
}
function getFullItemDescription(item) {
    if (item.showType === 'local') {
        return getLocalFullItemDescription(item);
    }

    let descr = escapeHTML(item.description, true) || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã';
    descr = descr
        .replace('\n<strong>', '\n\n<strong>')
        .replace(/\n+$/sg, '');

    return __(`<b>${item.name}</b>
${item.employer ? item.employer.name || '' : ''}

<b>–û–ø–ª–∞—Ç–∞:</b>
${getSalary(item)}

${descr}

<b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>
${getContacts(item)}`, ['content', 'vacancy', 'job', 'full']);
}
function getLocalItemDescription(item) {
    return __(`<b>${item.name}</b>
${item.city || ''}

<b>–û–ø–ª–∞—Ç–∞:</b>
${getSalary(item)}

<b>–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏:</b>
${item.responsibilities || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}

<b>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</b>
${item.requirements || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}`, ['content', 'vacancy', 'job']);
}
function getItemDescription(brief) {
    if (brief.showType === 'local') {
        return getLocalItemDescription(brief);
    }

    return __(`<b>${brief.name}</b>
${brief.employer.name} (${brief.area.name})

<b>–û–ø–ª–∞—Ç–∞:</b>
${getSalary(brief)}

<b>–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏:</b>
${brief.snippet.responsibility || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}

<b>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</b>
${brief.snippet.requirement || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}`, ['content', 'vacancy', 'job']);
}
function getItemImage(item) {
    return false;
}

function getLastVisit(ctx) {
    return ctx && ctx.session && ctx.session.profile
        ? ctx.session.profile.lastVisit
        : false;
}
async function setLastVisit(ctx) {
    let profile = ctx.session.profile;
    profile.lastVisit = moment().unix();
    return saveSettings(profile, ctx);
}

async function getDisclaimer() {
    let text;

    switch (process.env.BOT_NAME) {
        case 'beembam_bot':
            text = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –æ—Ç –∫–∞–Ω–∞–ª–∞ @BeemBam.

–¢—É—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–∑ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.

–ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª "–°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π". –ü–µ—Ä–µ–¥ —ç—Ç–∏–º –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞. 

–í—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏ —Å–µ–≥–æ–¥–Ω—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å.

–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∫–ª–∏–∫ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—é –ø—Ä—è–º–æ –∏–∑ –±–æ—Ç–∞ - —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∑—é–º–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Ä–∞–∑–¥–µ–ª–µ. –ï—Å–ª–∏ –≤–∞–º–∏ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç—Å—è, –±–æ—Ç –æ–ø–æ–≤–µ—Å—Ç–∏—Ç –æ–± —ç—Ç–æ–º.

–≠—Ç–æ —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞—á–∏ –≤ –ø–æ–∏—Å–∫–∞—Ö!`;
            break;
        case 'traineeship_bot':
            text = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π –æ—Ç –∫–∞–Ω–∞–ª–∞ @profinorm

–¢—É—Ç —Å–æ–±—Ä–∞–Ω—ã –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ. –ß—Ç–æ–±—ã –æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç–∫–ª–∏–∫–∏ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ - —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—ë —Ä–µ–∑—é–º–µ.

–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ–±–æ–π—Ç–∏ –≤—Å–µ—Ö –∏ –±—ã—Ç—å –ø–µ—Ä–≤—ã–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è - –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ –±–æ—Ç–∞ –ø–æ—á–∞—â–µ —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É–ø—É—â–µ–Ω–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏. –ë–∞–∑–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è.`;
            break;
        case 'workhant_bot':
            text = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π

–¢—É—Ç —Å–æ–±—Ä–∞–Ω—ã –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ. –ß—Ç–æ–±—ã –æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç–∫–ª–∏–∫–∏ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ - —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—ë —Ä–µ–∑—é–º–µ.

–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ–±–æ–π—Ç–∏ –≤—Å–µ—Ö –∏ –±—ã—Ç—å –ø–µ—Ä–≤—ã–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è - –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ –±–æ—Ç–∞ –ø–æ—á–∞—â–µ —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É–ø—É—â–µ–Ω–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏. –ë–∞–∑–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è.`;
            break;
        default:
            text = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π.

–¢—É—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–∑ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.

–ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª "–°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π". –ü–µ—Ä–µ–¥ —ç—Ç–∏–º –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞. 

–í—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏ —Å–µ–≥–æ–¥–Ω—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å.

–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∫–ª–∏–∫ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—é –ø—Ä—è–º–æ –∏–∑ –±–æ—Ç–∞ - —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∑—é–º–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Ä–∞–∑–¥–µ–ª–µ. –ï—Å–ª–∏ –≤–∞–º–∏ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç—Å—è, –±–æ—Ç –æ–ø–æ–≤–µ—Å—Ç–∏—Ç –æ–± —ç—Ç–æ–º.

–≠—Ç–æ —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞—á–∏ –≤ –ø–æ–∏—Å–∫–∞—Ö!`;
            break;
    }

    return {text, tags: ['content', 'vacancies', 'job', 'intro']};
}

module.exports = {
    getDisclaimer,
    withPhoto: false,
    toggleFavorite: false,
    hasFavorite: false,
    hasRandom: false,
    vacancies,
    periodic,
    hhFilter,
    discoverAction(ctx) {
        return setLastVisit(ctx);
    },
    getAction,
    additionalActions: [
        {
            code: 'continue',
            callback(ctx) {
                return ctx.scene.reenter();
            }
        },
        {
            code: 'send_resume',
            callback(ctx) {
                ctx.replyWithHTML(__('–†–µ–∑—é–º–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!', ['settings', 'success', 'send']));
                return ctx.scene.reenter();
            }
        },
        {
            code: 'new_resume',
            callback(ctx) {
                return ctx.scene.enter('resume');
            }
        }
    ],
    showVacancy,
    saveSettings,
    getSelectedCategoryIds,
    getAllCategories,
    getItemAtIndex,
    getEmptyText,
    getSettingsText,
    getItemDescription,
    getItemImage,
    getLastVisit,
    setLastVisit,
    getFullItemDescription
}