version: "3.7"

services:
  bot:
    image: node
    container_name: 'spambot_bot'
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
    volumes:
      - ./bot:/var/www
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - MONGO_DB=spambot
      - BOT_TOKEN=${BOT_TOKEN}
    command: npm run admin_bot

  horoscope_bot:
    image: node
    container_name: 'horoscope_bot'
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
    volumes:
      - ./bot:/var/www
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - MONGO_DB=horoscope_bot
      - BOT_TOKEN=${HOROSCOPE_BOT_TOKEN}
    command: npm run horoscope_bot_debug

  orfo_bot:
    image: node
    container_name: 'orfo_bot'
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
      - languagetool
    volumes:
      - ./bot:/var/www
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - MONGO_DB=orfo_bot
      - BOT_TOKEN=${ORFO_BOT_TOKEN}
      - LANGTOOL_API_URL= http://languagetool:8010/
    command: npm run orfo_bot_debug

  wiki_bot:
    image: node
    container_name: 'wiki_bot'
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
    volumes:
      - ./bot:/var/www
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - MONGO_DB=dating_bot
      - BOT_TOKEN=${DATING_BOT_TOKEN}
    command: npm run wiki_bot_debug

  ytdlc_bot:
    build:
      context: "."
      dockerfile: "./build/Dockerfile_ytdlc"
    container_name: 'ytdlc_bot'
    user: root
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
    volumes:
      - ./files:/downloads
      - ./bot:/var/www
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - MONGO_DB=ytdlc_bot
      - BOT_TOKEN=${YTDLC_BOT_TOKEN}
    command: npm run ytdlc_bot_debug

  film_bot:
    image: node
    container_name: 'film_bot'
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
      - redis
    volumes:
      - ./bot:/var/www
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - REDIS_HOST=spambot_redis
      - MONGO_DB=film_bot
      - BOT_NAME=film_bot
      - BOT_TOKEN=${FILM_BOT_TOKEN}
    command: npm run film_bot_debug

  mongo:
    image: mongo
    container_name: 'spambot_mongo'
    volumes:
      - ./database:/data/db
    ports:
      - ${MONGO_PORT}:27017

  languagetool:
    build:
      context: "."
      dockerfile: "./build/Dockerfile_languagetool"
    container_name: 'languagetool'
    ports:
      - ${LANGUAGETOOL_PORT}:8010
    working_dir: /LanguageTool-5.1
    command: "java -cp languagetool-server.jar  org.languagetool.server.HTTPServer --port 8010 --public --allow-origin '*'"

  redis:
    image: redis
    container_name: 'spambot_redis'

  tglib:
    build:
      context: "."
      dockerfile: "./build/Dockerfile_tdlib"
    container_name: 'tglib'
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
    volumes:
      - ./bot:/var/app
    working_dir: /var/app
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - MONGO_DB=spambot
      - TOKEN=${BOT_TOKEN}
      - API_ID=${API_ID}
      - API_HASH=${API_HASH}
    command: npm run tglib

  admin:
    image: nginx
    container_name: 'bots_nginx'
    ports:
      - ${HTTP_PORT}:80
    volumes:
      - ./admin/dist:/var/www/public
      - ./etc/nginx/site.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

  backend:
    image: node
    container_name: 'bots_backend'
    ports:
      - ${BACKEND_PORT}:3000
      - ${BACKEND_DEBUG_PORT}:9229
    depends_on:
      - mongo
      - redis
    volumes:
      - ./bot:/var/bot
      - ./backend:/var/www
      - type: bind
        source: ./docker-compose-prod.yml
        target: /var/docker-compose.yml
      - type: bind
        source: ./.env
        target: /var/.env
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - MONGO_DB=botofarmer
      - REDIS_HOST=spambot_redis
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - PG_USER=${PG_USER}
      - PG_PASS=${PG_PASS}
    command: npm run debug
