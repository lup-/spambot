version: "3.7"

services:
  horoscope_bot:
    image: node
    container_name: 'horoscope_bot'
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
    volumes:
      - ./bot:/var/www
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - MONGO_DB=horoscope_bot
      - BOT_TOKEN=${HOROSCOPE_BOT_TOKEN}
    command: npm run horoscope_bot_debug

  orfo_bot:
    image: node
    container_name: 'orfo_bot'
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
      - redis
      - languagetool
    volumes:
      - ./bot:/var/www
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - REDIS_HOST=spambot_redis
      - MONGO_DB=orfo_bot
      - BOT_NAME=orfo_bot
      - BOT_TOKEN=${ORFO_BOT_TOKEN}
      - LANGTOOL_API_URL= http://languagetool:8010/
    command: npm run orfo_bot_debug

  wiki_bot:
    image: node
    container_name: 'wiki_bot'
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
    volumes:
      - ./bot:/var/www
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - MONGO_DB=dating_bot
      - BOT_TOKEN=${DATING_BOT_TOKEN}
    command: npm run wiki_bot_debug

  ytdlc_bot:
    build:
      context: "."
      dockerfile: "./build/Dockerfile_ytdlc"
    container_name: 'ytdlc_bot'
    user: root
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
      - redis
    volumes:
      - ./files:/downloads
      - ./bot:/var/www
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - REDIS_HOST=spambot_redis
      - MONGO_DB=ytdlc_bot
      - BOT_TOKEN=${YTDLC_BOT_TOKEN}
    command: npm run ytdlc_bot_debug

  film_bot:
    image: node
    container_name: 'film_bot'
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
      - redis
    volumes:
      - ./bot:/var/www
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - REDIS_HOST=spambot_redis
      - MONGO_DB=film_bot
      - BOT_NAME=film_bot
      - BOT_TOKEN=${FILM_BOT_TOKEN}
      - TMDB_KEY=${TMDB_V3_KEY}
    command: npm run film_bot_debug

  familyname_bot:
    image: node
    container_name: 'familyname_bot'
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
      - redis
    volumes:
      - ./bot:/var/www
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - REDIS_HOST=spambot_redis
      - MONGO_DB=familyname_bot
      - BOT_NAME=familyname_bot
      - BOT_TOKEN=${FAMILYNAME_BOT_TOKEN}
    command: npm run familyname_bot_debug

  mailer_bot:
    image: node
    container_name: 'mailer_bot'
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
      - redis
    volumes:
      - ./bot:/var/www
      - ./backend:/var/backend
      - type: bind
        source: ./docker-compose-prod.yml
        target: /var/docker-compose.yml
      - type: bind
        source: ./.env
        target: /var/.env
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - REDIS_HOST=spambot_redis
      - MONGO_DB=mailer_bot
      - BOT_NAME=mailer_bot
      - BOT_TOKEN=${MAILER_BOT_TOKEN}
      - IMGBB_TOKEN=${IMGBB_TOKEN}
      - TGAPI_ROOT=https://tgapi_proxy
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    command: npm run mailer_bot_debug

  podcast_bot:
    image: node
    container_name: 'podcast_bot'
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
      - redis
      - tgapi
    volumes:
      - ./bot:/var/www
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - REDIS_HOST=spambot_redis
      - MONGO_DB=podcast_bot
      - BOT_NAME=podcast_bot
      - BOT_TOKEN=${PODCAST_BOT_TOKEN}
      - TGAPI_HOST=tgapi
      - TGAPI_PORT=8081
      - DEBUG=*
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    command: npm run podcast_bot_debug

  bookie_bot:
    build:
      context: "."
      dockerfile: "./build/Dockerfile_books"
    container_name: 'bookie_bot'
    ports:
      - 9200:9229
    depends_on:
      - mongo
      - redis
      - tgapi_proxy
    volumes:
      - ./bot:/var/www
      - ./files:/var/www/files
      - ./lib:/var/www/lib
    working_dir: /var/www
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - REDIS_HOST=spambot_redis
      - MONGO_DB=bookie_bot
      - BOT_NAME=bookie_bot
      - BOT_TOKEN=${BOOKIE_BOT_TOKEN}
      - TGAPI_ROOT=https://tgapi_proxy
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - FILES_LOCAL_PATH=/var/www/files
      - FILES_REMOTE_PATH=/files
      - LIB_PATH=/var/www/lib
      - PROXY_DISABLED=1
    command: node --inspect=0.0.0.0 bots/books.js

  monitor:
    image: node
    ports:
      - ${MONITOR_PORT}:3000
      - ${BOT_DEBUG_PORT}:9229
    volumes:
      - ./monitor:/var/monitor
      - type: bind
        source: ./docker-compose-prod.yml
        target: /var/monitor/docker-compose.yml
      - type: bind
        source: ./.env
        target: /var/monitor/.env
    working_dir: /var/monitor
    environment:
      - NODE_ENV=development
      - TGAPI_ROOT=https://tgapi_proxy
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - PORT=3000
    command: nodejs --inspect=0.0.0.0 queue.js

  mongo:
    image: mongo
    container_name: 'spambot_mongo'
    volumes:
      - ./database:/data/db
    ports:
      - ${MONGO_PORT}:27017

  languagetool:
    build:
      context: "."
      dockerfile: "./build/Dockerfile_languagetool"
    container_name: 'languagetool'
    ports:
      - ${LANGUAGETOOL_PORT}:8010
    working_dir: /LanguageTool-5.1
    command: "java -cp languagetool-server.jar  org.languagetool.server.HTTPServer --port 8010 --public --allow-origin '*'"

  unoconv:
    build:
      context: "."
      dockerfile: "./build/Dockerfile_unoconv"

  redis:
    image: redis
    ports:
      - 6379:6379
    container_name: 'spambot_redis'

  tglib:
    build:
      context: "."
      dockerfile: "./build/Dockerfile_tdlib"
    container_name: 'tglib'
    ports:
      - ${BOT_DEBUG_PORT}:9229
    depends_on:
      - mongo
    volumes:
      - ./bot:/var/app
    working_dir: /var/app
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      - MONGO_DB=spambot
      - TOKEN=${BOT_TOKEN}
      - API_ID=${API_ID}
      - API_HASH=${API_HASH}
    command: npm run tglib

  tgapi_proxy:
    image: outrigger/https-proxy:1.0
    container_name: 'tgapi_proxy'
    ports:
      - ${HTTPS_API_PORT}:443
    depends_on:
      - tgapi
    environment:
      UPSTREAM_DOMAIN: tgapi
      UPSTREAM_PORT: 8081
      PROXY_DOMAIN: tgapi_proxy

  tgapi:
    build:
      context: "."
      dockerfile: "./build/Dockerfile_tgapi"
    container_name: 'tgapi'
    volumes:
      - ./files:/files
    command: telegram-bot-api --api-id ${API_ID} --api-hash ${API_HASH} --http-port=8081 --log=/proc/self/fd/1 --local --verbosity=2

  admin:
    image: nginx
    container_name: 'bots_nginx'
    ports:
      - ${HTTP_PORT}:80
    volumes:
      - ./admin/dist:/var/www/public
      - ./etc/nginx/site.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

  admin_plumcore:
    image: nginx
    ports:
      - ${HTTP_PORT}:80
    volumes:
      - ./adminPlumcore/dist:/var/www/public
      - ./etc/nginx/site.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

  backend:
    image: node
    container_name: 'bots_backend'
    ports:
      - ${BACKEND_PORT}:3000
      - ${BACKEND_DEBUG_PORT}:9229
    depends_on:
      - mongo
      - redis
    volumes:
      - ./bot:/var/bot
      - ./backend:/var/www
      - ./backend:/var/backend
      - type: bind
        source: ./docker-compose-prod.yml
        target: /var/docker-compose.yml
      - type: bind
        source: ./.env
        target: /var/.env
    working_dir: /var/backend
    environment:
      - NODE_ENV=development
      - MONGO_HOST=spambot_mongo
      #- MONGO_HOST=192.168.80.1
      #- MONGO_PORT=27272
      - MONGO_DB=botofarmer
      - REDIS_HOST=spambot_redis
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - PG_USER=${PG_USER}
      - PG_PASS=${PG_PASS}
      - IMGBB_TOKEN=${IMGBB_TOKEN}
    command: npm run debug
